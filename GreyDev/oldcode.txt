int[] e11 = e2.getPhysics().getBottomLine();
			if(((e11[2] - e11[0])*(e2.getPhysics().getY() - e11[1]) - (e11[3] - e11[1])*(e2.getPhysics().getX() - e11[0])) < 0) return 1;
			if((e11[2] - e11[0])*(e2.getPhysics().getY() - e11[1]) - (e11[3] - e11[1])*(e2.getPhysics().getX() - e11[0]) > 0) return -1;
			return 1;
		}


	
	public int compareTo(DynEntity e){
		if(e.yPos > this.yPos)
			return -1;
		if(e.yPos < this.yPos)
			return 1;
		return 0;
	}
}

/**
	 * Used to determine render order 
	 * @param e - Object of comparison
	 * @return - 1 for  e in front, -1 for e behind, 0 for equal.
	 */
	@Override
	public int compareTo(StatEntity e) {
		System.out.println("Comparing!");
		if(this.yPos < e.yPos){ 
			return 1; //indicates e is behind
		}
		else if(this.yPos > e.yPos){
			return -1; //indicates that e is in front
		}
		else
			return 0;//indicates colinearity
	}